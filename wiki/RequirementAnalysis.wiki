= Requirement Analysis =
 
 = 1.Functional Requirements =
 
 == 1.1 User Profiles ==
1.1.1 Each user shall have information fields such as his/her name, surname, contact address(e-mail) and password.

1.1.2 Registrations shall be checked for validation via e-mail. 

1.1.3 Users shall login the site by using e-mail address and password.

1.1.4 Users should login with a facebook account.

1.1.5 Users should edit their profile page.

1.1.6 Users should acquire their passwords if forgotten.

 == 1.2 Home Page ==
1.2.1 Design of home page should be simple and user friendly.

1.2.2 Color choices should be done consciously.

1.2.3 Each user shall login with his/her e-mail address as user id and password from this page.

1.2.4 Homepage shall consist the recent urgent tasks.

 == 1.3 Searching ==
1.3.1 Users should search for tasks with which they are interested.

1.3.2 System also should suggest new areas according to their past searches or tasks.

 == 1.4 Task ==
1.4.1 User should open a new task.

1.4.2 User should edit the task that they have privileges on.

1.4.3 User that have privileges on a task should give privileges to other users.

1.4.4 User should delete task. 

1.4.5 The thread shall close the incoming donation automatically if the target need is met.

1.4.6 User should give donations via paypal or credit card.

1.4.7 User should give feedbacks about a task.

 == 1.5 Tagging ==
1.5.1 Users shall tag their threads.

1.5.2 Users shall use up to 10 tags.

1.5.3 Users shall tag their threads according to their thread's content.

1.5.4 Users should give feedbacks about tags.

 ==1.6 Point System == 
1.6.1 Users should earn points by helping a task fulfilled.

1.6.2 Users should earn points by checking whether a task is righteous.

1.6.3 Users should earn points by checking whether tags of a task make sense.

1.6.4 Users that have the most points shall be able to feature their tasks on the main page.

 = 2.Non-Functional Requirements =

 == 2.1 Operating & Platform constraints ==
2.1.1 The application should be supported by Google Chrome, Safari, Internet Explorer and Mozilla Firefox.

 == 2.2 Modifiability ==
2.2.1 The system should be designed so that the developers can modify it to respond the varying needs of users.

 == 2.3 Portability ==
2.3.1 A mobile application to interact with community shall be supported with less features relative to the web application.

 == 2.4 Security ==
2.4.1 The application shall be accessed via a user authentification process. (i.e. sign in) Only members shall see the contents. Registration shall be validated since it is a restricted community.

 == 2.5 Usability ==
2.5.1 The user interface of the application should be similar to popular social media applications (e.g. Facebook) at the launch stage to achieve ease of use.

2.5.2 There shall be more visual design to focus on the content.
 
 == 2.6 Privacy ==
2.6.1 The user shall be able to arrange the visibility of their information etc.

 == 2.7 Language ==
2.7.1 In the early stage, the application shall be in English for everybody including foreigners to understand.

 == 2.8 Response Time ==
2.8.1 Response time of the web pages and database queries should be less than ten seconds with an average quality Internet connection.

 == 2.9 Reliability ==
2.9.1 All the records and database shall be copied for possible failures and the copied data should be updated periodically(daily or after some amount of changes).

 == 2.10 System Availability ==
2.10.1 The user interface of the system shall be supported by Google Chrome, Safari, Internet Explorer and Mozilla Firefox.
 
 2.10.2 The user interface of the system shall be available during day and the maintenance shall be performed at nights when necessary.

 == 2.11 Physical Requirements ==
2.11.1 System shall be written using an IDE in Windows, OS X or Linux operating systems.